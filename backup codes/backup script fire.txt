backup script:
document.addEventListener("DOMContentLoaded", async function () {
    // === HOME PAGE FUNCTIONALITY ===

    // Random Pokémon by Type
    const randomBtn = document.getElementById("randomButton");
    const typeDropdown = document.getElementById("type");
    const searchResult = document.getElementById("searchResult");

    if (randomBtn && typeDropdown && searchResult) {
        randomBtn.addEventListener("click", async function () {
            const selectedType = typeDropdown.value;

            try {
                const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=1025");
                const data = await response.json();

                const pokemonData = await Promise.all(data.results.map(async (pokemon) => {
                    const detailsResponse = await fetch(pokemon.url);
                    return await detailsResponse.json();
                }));

                let filteredList = selectedType === "all"
                    ? pokemonData
                    : pokemonData.filter(pokemon =>
                        pokemon.types.some(t => t.type.name === selectedType)
                    );

                if (filteredList.length === 0) {
                    alert("No Pokémon found for this type!");
                    return;
                }

                const randomIndex = Math.floor(Math.random() * filteredList.length);
                const randomPokemon = filteredList[randomIndex];

                searchResult.innerHTML = `
                    <h3>${randomPokemon.name.toUpperCase()}</h3>
                    <img src="${randomPokemon.sprites.front_default}" alt="${randomPokemon.name}">
                    <p>Type: ${randomPokemon.types.map(t => t.type.name).join(", ")}</p>
                    <a href="https://www.pokemon.com/us/pokedex/${randomPokemon.id}" target="_blank">View Dex Entry</a>
                `;
            } catch (error) {
                console.error("Error fetching Pokémon data:", error);
                alert("Failed to fetch Pokémon data. Please try again.");
            }
        });
    }

    // Search by Name
    const searchBtn = document.getElementById("searchButton");
    const searchInput = document.getElementById("searchInput");

    if (searchBtn && searchInput && searchResult) {
        searchBtn.addEventListener("click", async function () {
            const searchQuery = searchInput.value.toLowerCase().trim();
            if (!searchQuery) {
                alert("Please enter a Pokémon name!");
                return;
            }

            try {
                const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${searchQuery}`);
                if (!response.ok) {
                    alert("Pokémon not found! Try again.");
                    return;
                }

                const pokemon = await response.json();
                searchResult.innerHTML = `
                    <h3>${pokemon.name.toUpperCase()}</h3>
                    <img src="${pokemon.sprites.front_default}" alt="${pokemon.name}">
                    <p>Type: ${pokemon.types.map(t => t.type.name).join(", ")}</p>
                    <a href="https://www.pokemon.com/us/pokedex/${pokemon.id}" target="_blank">View Dex Entry</a>
                `;
            } catch (error) {
                console.error("Error fetching Pokémon:", error);
                alert("Failed to retrieve Pokémon data.");
            }
        });
    }

    // === SHARED FUNCTIONALITY ===

    // Random Type Button
    const randomTypeBtn = document.getElementById("randomTypeBtn");
    if (randomTypeBtn) {
        const typePages = [
            "fire.html", "water.html", "grass.html", "electric.html", "psychic.html",
            "ice.html", "dragon.html", "dark.html", "fairy.html", "bug.html",
            "rock.html", "ground.html", "poison.html", "fighting.html", "steel.html",
            "ghost.html", "normal.html"
        ];
        randomTypeBtn.addEventListener("click", function () {
            const randomIndex = Math.floor(Math.random() * typePages.length);
            const selectedPage = typePages[randomIndex];
            window.location.href = selectedPage;
        });
    }

    // Home Button
    document.addEventListener("DOMContentLoaded", function () {
  const homeBtn = document.getElementById("homeBtn");

  if (homeBtn) {
    homeBtn.addEventListener("click", function () {
      window.location.href = "pkmnpg-index.html"; // Adjust if your homepage file name is different
    });
  }
});

    // === FIRE.HTML FUNCTIONALITY ===

   document.addEventListener("DOMContentLoaded", async function () {
  // Only run this block if we're on the Fire page
  if (document.body.classList.contains("pkfire")) {
    const randomFireBtn = document.getElementById("randomfire");
    const fireResult = document.getElementById("fireResult");

    if (!randomFireBtn || !fireResult) return;

    let firePokemonList = [];

    try {
      const response = await fetch("https://pokeapi.co/api/v2/type/fire");
      const data = await response.json();
      firePokemonList = data.pokemon.map(p => p.pokemon.name);
    } catch (error) {
      console.error("Failed to load Fire-type Pokémon:", error);
      fireResult.textContent = "Failed to load Fire-type Pokémon.";
      return;
    }

    randomFireBtn.addEventListener("click", async function () {
      fireResult.innerHTML = "Fetching Pokémon...";
      const randomName = firePokemonList[Math.floor(Math.random() * firePokemonList.length)];

      try {
        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${randomName}`);
        const pokemon = await res.json();

        // Format Pokémon name for Serebii and Bulbapedia URLs
        const formattedName = pokemon.name.replace(" ", "_").replace("-", "_").toLowerCase();
        const serebiiLink = `https://www.serebii.net/pokemon/${formattedName}`;
        const bulbapediaLink = `https://bulbapedia.bulbagarden.net/wiki/${pokemon.name.replace(" ", "_")}_(Pokémon)`;

        fireResult.innerHTML = `
          <h3>${pokemon.name.toUpperCase()}</h3>
          <img src="${pokemon.sprites.front_default}" alt="${pokemon.name}">
          <p>Type: ${pokemon.types.map(t => t.type.name).join(", ")}</p>
          <a href="${serebiiLink}" target="_blank">View on Serebii</a> |
          <a href="${bulbapediaLink}" target="_blank">View on Bulbapedia</a>
        `;
      } catch (error) {
        console.error("❌ Error fetching Pokémon details:", error);
        fireResult.textContent = "Failed to load Pokémon details.";
      }
    });
  }
});